/**
 * New node file
 */
var apis = require('./apis.js')();

var gen_menu_args = function () {
	var args = {};
	if(arguments[1]==apis.categories) {
		args.location_id = arguments[0];
		args.categories = true;
		args.category_id = arguments[2];
	} else if(arguments[1]==apis.items) {
		args.location_id = arguments[0];
		args.items = apis.items;
		args.menu_item_id = arguments[2];
		args.modifier_groups = arguments[3];
		args.modifier_group_id = arguments[4];
	} else if(arguments[1]==apis.modifiers) {
		args.location_id = arguments[0];
		args.modifiers = apis.modifiers;
		args.modifier_id = arguments[2];
	} else if(arguments[1]==apis.catgegories) {
		args.location_id = arguments[0];
		args.catgegories = apis.categories;
		args.category_id = arguments[2];
	} else {
		args = arguments[0];
	}
	return args;
}

//...
//...menu
//...
function get_location_menu_url(p_location_id) {
	var the_url = apis.get_base_url()+apis.urls.menu
	the_url = the_url.replace(apis.location_id,p_location_id);
	return the_url;
}


function get_location_menu_items_url(p_args) {
	the_url = get_location_menu_url(p_args.location_id);
	if(p_args.items!=undefined) {
		the_url += '/'+apis.items;		
	}
	return the_url;
}

function get_location_menu_item_id_url(p_args) {
	the_url = get_location_menu_items_url(p_args);
	if(p_args.menu_item_id!=undefined) {
		if(p_args.items==undefined) {
			throw new Error('missing items keywords');
		}
		the_url += '/'+p_args.menu_item_id;		
	}
	return the_url;
}
function get_location_menu_item_id_modifier_groups_url(p_args) {
	the_url = get_location_menu_item_id_url(p_args);
	if(p_args.modifier_groups!=undefined) {
		if(p_args.menu_item_id==undefined) {
			throw new Error('missing menu_item_id keyword');
		}
		the_url += '/'+apis.modifier_groups;		
	}
	return the_url;
}

function get_location_menu_item_id_modifier_groups_id_url(p_args) {
	the_url = get_location_menu_item_id_modifier_groups_url(p_args);
	if(p_args.modifier_group_id!=undefined) {
		if(p_args.modifier_groups==undefined) {
			throw new Error('missing modifier_groups keyword');
		}
		the_url += '/'+p_args.modifier_group_id;
	}
	return the_url;
}

function get_location_menu_modifiers_url(p_args) {
	var the_url = get_location_menu_url(p_args.location_id);
	the_url += '/'+apis.modifiers;
	return the_url;
	
}

function get_location_menu_modifier_id_url(p_args) {
	var the_url = get_location_menu_modifiers_url(p_args);
	if(p_args.modifier_id!=undefined) {
		if(p_args.modifiers==undefined) {
			throw new Error('missing modifiers keyword');
		}
		the_url += '/'+p_args.modifier_id;
	}
	return the_url;
	
}


function get_location_menu_categories_url(p_args) {
	var the_url = get_location_menu_url(p_args.location_id);
	the_url += '/'+apis.categories;
	return the_url;
	
}

function get_location_menu_category_id_url(p_args) {
	var the_url = get_location_menu_categories_url(p_args);
	if(p_args.category_id!=undefined) {
		if(p_args.categories==undefined) {
			throw new Error('missing categories keyword');
		}
		the_url += '/'+p_args.category_id;
	}
	return the_url;
	
}

function get_location_menu_url_handler(p_args) {
	if(p_args.items!=undefined) {
		return get_location_menu_item_id_modifier_groups_id_url(p_args);
	} else if(p_args.modifiers!=undefined) {
		return get_location_menu_modifier_id_url(p_args);
	} else if(p_args.categories!=undefined) {
		return get_location_menu_category_id_url(p_args);
	} else {
		return get_location_menu_url(p_args);
	}
}

module.exports = function() {

	return {
		get_location_menu_url: get_location_menu_url_handler,
		gen_menu_args: gen_menu_args,
		
	};
}